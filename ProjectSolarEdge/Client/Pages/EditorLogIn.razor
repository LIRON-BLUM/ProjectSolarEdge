
@page "/"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<link href="/css/styles/Gambeling.css" rel="stylesheet" />
<link href="/css/styles/LogIn.css" rel="stylesheet" />



    <div class="container">
        <div class="justify-content-center align-items-center text-center">

            <img src="/Files/SolarEdgeLogoWhite.png" width="40%" class="rounded mx-auto d-block" alt="Logo">
            @*<input type="text" placeholder="Email" class="col-4" />
        <input type="text" placeholder="Passwored" class="col-4" />*@

          

            <MudTextField @bind-Value="@UserEmail" Label="Username" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
    

            <MudTextField @bind-Value="@UserPassword" Label="Password" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonTestclick" AdornmentAriaLabel="Show Password" />

    
            <MudButton Variant="Variant.Filled" @onclick="EnterEditor" Color="Color.Secondary" DisableElevation="true">Save</MudButton>
        </div>


    </div>


    @*<MudDialog @bind-IsVisible="visible" Options="dialogOptions">
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> Login faild - Incorrect username or password
            </MudText>
        </TitleContent>
        <DialogContent>
            <p>How awesome are inline dialogs?</p>
            <MudRating @bind-SelectedValue="rating" Class="mt-3" />
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit" Class="px-10">Close</MudButton>
        </DialogActions>
    </MudDialog>*@


@code {


    private bool visible;
    private int rating;
    private void OpenDialog() => visible = true;
    void Submit() => visible = false;

    private DialogOptions dialogOptions = new() { FullWidth = true };



    void ButtonTestclick()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

}
