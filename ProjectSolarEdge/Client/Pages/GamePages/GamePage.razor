@layout SeconderyLayout
@page "/GamePage"

@inject IJSRuntime JSRuntime;

<link href="/css/styles/Game.css" rel="stylesheet" />

<div class="container">
        <div id="game" class="flex-center flex-column">
            <div id="points">
                <span id="score"> 0 </span> <span> Points</span>
            </div>
            <div id="hud">
                <div id="hud-item">
                    <div id="progressBar">
                        <div id="progressBarFull"></div>
                    </div>
                    <p id="progressText"></p>
                </div>
                <div id="hud-item">
                </div>
            </div>

            <div id="QuestionPic"></div>
            <h2 id="question"> What is the answer to this question? </h2>
            <div id="answersContainer">
                <div class="choiceContainer"> 
                    <p class="choice-text" data-number="1"> Choice 1</p>
                </div>
                  <div class="choiceContainer"> 
                    <p class="choice-text" data-number="2"> Choice 2</p>
                </div>
                  <div class="choiceContainer"> 
                    <p class="choice-text" data-number="3"> Choice 3</p>
                </div>
                  <div class="choiceContainer"> 
                    <p class="choice-text" data-number="4"> Choice 4</p>
                </div>
            </div>
            <button type="button" id="submitAnswer" class="btn" onclick="saveAnawer(event)" disabled>submit</button>
            <button type="button" id="SkipAnswer" onclick="SkipAnawer()">Skip</button>

            <span id="timer"></span>

        </div>
    </div>

@code {
     protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            CallJSMethod();
        }
     }

    private async Task CallJSMethod()
    {
        await JSRuntime.InvokeVoidAsync("GamePage");
    }
}
