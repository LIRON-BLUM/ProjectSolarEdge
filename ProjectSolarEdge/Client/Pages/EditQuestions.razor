@page "/EditQuestion/{EditorID}"
@*@page "/EditQuestion/{Id}"*@
@page "/EditQuestion/{Id}/{EditorID}"
@using ProjectSolarEdge.Shared.Entities
@using System.Net.Http.Json
@inject HttpClient httpClient
@using Microsoft.AspNetCore.Components.Web.Virtualization



<MudGrid>
    <MudItem xs="12" class="d-flex gap-4">
        <MudItem xs="10" class="d-flex gap-4"><h1>Edit Question @QuestionsCRUD.ID</h1></MudItem>
        <MudItem xs="2" class="d-flex gap-4  ">

            <MudButton Variant="Variant.Filled" @onclick="AddAndUpdate" Color="Color.Secondary" DisableElevation="true">Save</MudButton>

            <MudButton Variant="Variant.Filled" @onclick="DeleteQuestion" Color="Color.Primary" DisableElevation="true">Delete Question</MudButton>
        </MudItem>
    </MudItem>


    <MudItem xs="7" class="gap-4">
        <MudItem xs="12" id="QuestionAnsIMG" class="d-flex gap-4 ma-2" Width="100%" Height="auto">

            <MudItem xs="8" id="Question" Width="100%" Height="auto">
                <MudTextField T="string" Label="Type Your Multiple Question" Width="100%" class="ma-2" Variant="Variant.Outlined" @bind-Value="@QuestionsCRUD.QuestionBody" Lines="4" />
            </MudItem>
            <MudItem xs="2" id="IMG" Width="100%" Height="auto">
                @*<MudPaper Class="mud-theme-secondary ma-2" Width="100px" Height="100px" Elevation="0" />*@
                <InputFile OnChange="@OnInputFileChanged"></InputFile>
                <img src="@QuestionImage" style="width:200px; height:auto;" />
              

            </MudItem>
        </MudItem>

        <MudItem xs="12" id="AnswersAndDifficulty" class="d-flex gap-4 ma-2" Width="100%" Height="auto">
            <MudItem xs="8" id="Answers" class="d-flex gap-4 " Width="100%" Height="auto">



                @*<MudRadioGroup @bind-SelectedOption="@CheckedAnswerID">
                    @foreach (var myanswer in QuestionsCRUD.Answers)
                    {
                        <MudRadio Option="@myanswer.ID" Color="Color.Primary" Dense="true"> <InputText @bind-Value="@myanswer.AnswerBody" placeholder="Enter Your answer"></InputText></MudRadio>
                        <br />
                        <br />
                    }
                </MudRadioGroup>*@


                <MudRadioGroup @bind-SelectedOption="@CheckedAnswerID">
                    @foreach (var myanswer in QuestionsCRUD.Answers)
                    {
                        <MudItem xs="12" id="Answers" class="d-flex gap-4 " Width="100%" Height="auto">
                            <MudItem xs="10" id="AnswersRadio" class="d-inline-flex" Height="auto">
                                <MudRadio Option="@myanswer.ID" Color="Color.Primary" Dense="true">
                                    <MudTextField  T="string"  @bind-Value="@myanswer.AnswerBody" Label="Enter Your answer" class="ma-2" Variant="Variant.Outlined" />
                                    @*<InputText @bind-Value="@myanswer.AnswerBody" placeholder="Enter Your answer"></InputText>*@
                                </MudRadio>
                            </MudItem>

                            <MudItem xs="2" id="Image" class="d-inline-flex" Height="auto">
                                <MudPaper Class="mud-theme-Primary ma-2" Width="100%" Height="40px" Elevation="0" />
                                <img src="/Files/AnswerDefaltImage.png" Class=" ma-2" Width="100%" Height="40px">
                            </MudItem>

                        </MudItem>
                    }

                </MudRadioGroup>

            </MudItem>

            <MudItem xs="4" id="DifficultyContainer" class=" gap-4 " Width="100%" Height="auto">
                <MudItem xs="12" class=" gap-4 " id="Difficulty" Width="100%" Height="auto">
                    <MudText>Difficulty</MudText>
                </MudItem>

         

                <MudPagination Color="Color.Primary" Count="3" T="QuestionDifficulty" SelectedChanged="DifficultyChanged" />

                <MudText Align="Align.Center">Selected page: @SelectedDiff </MudText>

                @*<MudItem xs="12" class="d-flex gap-4 mb-8 " id="DifficultyEasy" Width="100%" Height="auto">
                        <MudItem xs="4" class=" gap-4 " id="Difficulty" Width="100%" Height="auto">
                            <MudFab Color="Color.Primary" Label="1" Size="Size.Small" />
                            <MudText>Easy</MudText>
                        </MudItem>
                        <MudItem xs="4" class=" gap-4 " id="DifficultyMedium" Width="100%" Height="auto">
                            <MudFab Color="Color.Primary" Label="2" Size="Size.Small" />
                            <MudText>Medium</MudText>
                        </MudItem>
                        <MudItem xs="4" class=" gap-4 " id="DifficultyHard" Width="100%" Height="auto">
                            <MudFab Color="Color.Primary" Label="3" Size="Size.Small" />
                            <MudText>Hard</MudText>
                        </MudItem>
                    </MudItem>*@

                <MudItem xs="12" class="flex-column gap-4 mt-8" id="Subject" Width="100%" Height="auto">
                    <MudText>Subject</MudText>


                    <MudSelect Margin="Margin.Dense" T="string" Variant="Variant.Outlined" Label="Select Subjects" MultiSelection="true" @bind-Value="DefaultValue" @bind-SelectedValues="SelectedSubjects">
                        @foreach (var subject in SubjectsData)
                        {
                            <MudSelectItem T="string" Value="@subject.SubjectName">
                                @subject.SubjectName
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" justify-end aria-label="delete"></MudIconButton>
                            </MudSelectItem>
                        }
                    </MudSelect>

                    <MudItem xs="12" id="AddSubject" class="d-flex " Width="100%" Height="auto">
                        <MudItem xs="8" id="AddSubjectName" Margin="Margin.Dense" Width="100%" Height="auto">
                            <MudTextField @bind-Value="@OneSubject.SubjectName" class="ma-1" Variant="Variant.Outlined" Margin="Margin.Dense" Counter="25" MaxLength="25" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" />
                        </MudItem>
                        <MudItem xs="4" class="ma-1" id="AddSubjectNameBtn" Width="100%" Height="auto">
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Class="--mud-palette-gray-default">Add Subject</MudButton>
                        </MudItem>
                    </MudItem>

                </MudItem>

            </MudItem>




        </MudItem>



        <MudItem xs="8" id="FeedbackContainer" class="d-flex gap-4 " Width="100%" Height="auto">
            <MudTextField T="string" Label="Enter Your Feedback" Width="100%" class="ma-2" Variant="Variant.Outlined" @bind-Value="@QuestionsCRUD.Feedback" Lines="4" />

        </MudItem>







    </MudItem>


    <MudItem xs="5" class="d-inline-flex flex-column  gap-4">

        @*<MudPaper Class="mud-theme-secondary" Width="100%" Height="320px" Elevation="0" />
            <MudPaper Class="mud-theme-secondary" Width="100%" Height="64px" Elevation="0" />*@

        <MudItem>
            <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Immediate="false" Placeholder="Search" Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 d-flex align-center justify-start mud-width-full py-2"></MudTextField>
        </MudItem>
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-8">

            <MudTable Items="QuestionsDataToDisplay" Hover="true" FixedHeader="@fixed_header" FixedFooter="@fixed_footer" Height="@(fixed_header || fixed_footer ?"400px":"")" ServerData="@(new Func<TableState, Task<TableData<Question>>>(ServerReload))">
                <HeaderContent>
                    <MudTh>Type</MudTh>
                    <MudTh>Question</MudTh>
                    <MudTh>Delete</MudTh>

                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Type">@context.Type</MudTd>
                    <MudTd DataLabel="Question">@context.QuestionBody <br /> <MudChip>@context.Difficulty</MudChip>  <MudChip>@context.UpdateDate</MudChip> </MudTd>
                    <MudTd DataLabel="Delete">

                        <MudTooltip Text="Delete Question">
                            <MudIconButton Icon="@Icons.Material.Filled.Delete" @onclick="(() =>QuestionsToDeleteID(context.ID))" Color="Color.Primary" />
                        </MudTooltip>
                    </MudTd>

                </RowTemplate>
            </MudTable>

        </MudPaper>



        <MudButton @onclick="@OpenDialog" Class="mt-4" Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">
            New Question
        </MudButton>


        <MudDialog @bind-IsVisible="visible" Options="dialogOptions">
            <TitleContent>
                <MudText Typo="Typo.h6">
                    <MudIcon Icon="@Icons.Material.Filled.Edit" Class="mr-3" /> Edit rating
                </MudText>
            </TitleContent>
            <DialogContent>
                <p>How awesome are inline dialogs?</p>
                <MudRating @bind-SelectedValue="rating" Class="mt-3" />
            </DialogContent>
            <DialogActions>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="Submit" Class="px-10">Close</MudButton>
            </DialogActions>
        </MudDialog>



    </MudItem>



</MudGrid>








@code {

    private bool visible;
    private int rating;
    private void OpenDialog() => visible = true;
    void Submit() => visible = false;

    private DialogOptions dialogOptions = new() { FullWidth = true };


    public bool _isOpen;

    public void ToggleOpen()
    {
        if (_isOpen)
            _isOpen = false;
        else
            _isOpen = true;
    }

    public string ReadOnly { get; set; } = "Can't change me";
    string sampleText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";

    string mAnswer = "Answer";
    public int IntValue { get; set; }

    public int ScoreEasy { get; set; }

    public bool Dense_Radio { get; set; } = true;

    private IEnumerable<string> MaxCharacters(string ch)
    {
        if (!string.IsNullOrEmpty(ch) && 25 < ch?.Length)
            yield return "Max 25 characters";
    }

    //IList<IBrowserFile> files = new List<IBrowserFile>();
    //private void UploadFiles(InputFileChangeEventArgs e)
    //{
    //    foreach (var file in e.GetMultipleFiles())
    //    {
    //        //var file = inputFileChangeEvent.File;


    //        files.Add(file);
    //        var fileInArray = new byte[file.Size];
    //        await file.OpenReadStream(1512000).ReadAsync(fileInArray);

    //        filePicDataUrl = $"data:image/png;base64,{Convert.ToBase64String(fileInArray)}";


    //    }
    //TODO upload the files to the server



}






